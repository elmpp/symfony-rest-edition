BorderForce\Drt\FlightsBundle\Entity\Flight:
  type: entity
  repositoryClass: BorderForce\Drt\FlightsBundle\Entity\Repository\FlightRepository
  table: flights
  id:
    id:
      type: integer
      length: 12
      generator:
        strategy: AUTO
  fields:
    flightNumber:  { type: string(12), nullable: false }
    scheduledDate: { type: date, format: 'Y-m-d', nullable: false }
    origin:  { type: string(50), nullable: false }
    touchdownEstimated:  { type: datetime, nullable: true, format: 'yyyy-MM-dd' }
    touchdown:  { type: datetime, nullable: true, format: 'yyyy-MM-dd' }
    choxEstimated:  { type: datetime, nullable: true, format: 'yyyy-MM-dd' }
    chox:  { type: datetime, nullable: true, format: 'yyyy-MM-dd' }
    passengers: { type: integer(8), nullable: true }
  manyToOne:
    airline:
      targetEntity: Airline
      inversedBy: flights
      joinColumn:
        name: airline_id
        referencedColumnName: id
  uniqueConstraints:
    flightNumberDate:
      columns: [ flightNumber, scheduledDate ]
BorderForce\Drt\FlightsBundle\Entity\ForecastFlight:
  type: entity
  table: forecast_flights
#  indexes:
#    name_index:
#      columns: [ name ]
  id:
    id:
      type: integer
      generator:
        strategy: AUTO
  fields:
#    ref: { type: char(6), primary: true, nullable: true }
    name:  { type: string(50), nullable: true }
    code:  { type: string(12), nullable: true }
    test: { type: string(50), nullable: true }
  manyToOne:
    airline:
      targetEntity: Airline
      inversedBy: forecast_flights
      joinColumn:
        name: airline_id
        referencedColumnName: id
#    last_name:  { type: string(50), nullable: true }
#    birthdate:    { type: timestamp, nullable: true }
#    hiredate:     { type: timestamp, nullable: true }
#    email:         { type: string(100), nullable: true }
#  oneToOne:
#    company:
#      targetEntity: Airline
#      joinColumn:
#        name: airline_id
#        referencedColumnName: id
#  oneToMany:
#    phonenumbers:
#      targetEntity: Phonenumber
#      mappedBy: user
#      cascade: ["persist", "merge"]
#  manyToMany:
#    groups:
#      targetEntity: Group
#      joinTable:
#        name: cms_users_groups
#        joinColumns:
#          user_id:
#            referencedColumnName: id
#        inverseJoinColumns:
#          group_id:
#            referencedColumnName: id
#  lifecycleCallbacks:
#    prePersist: [ doStuffOnPrePersist, doOtherStuffOnPrePersistToo ]
#    postPersist: [ doStuffOnPostPersist ]
BorderForce\Drt\FlightsBundle\Entity\Airline:
  type: entity
  table: airlines
  id:
    id:
      type: integer
      generator:
        strategy: AUTO
  fields:
    name:  { type: string(50), nullable: true, unique: true }
    colour: { type: string(50), nullable: true }